<Window x:Class="StoreCard.ChangeExecutableWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:local="clr-namespace:StoreCard"
        mc:Ignorable="d"
        Width="800"
        Height="600"
        Background="#FF222222"
        WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        Title="Open With">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!--  Radio buttons  -->
        <StackPanel Margin="10">
            <Label
                Margin="0,0,0,10"
                FontSize="14"
                Foreground="White">
                Choose which program will be used to open this item:
            </Label>
            <!--  "Default"  -->
            <StackPanel
                Margin="5,0,0,10"
                Orientation="Horizontal">
                <RadioButton
                    Name="DefaultRadioButton"
                    IsChecked="True"
                    GroupName="ExecutableType" />
                <TextBlock
                    Height="20"
                    VerticalAlignment="Stretch"
                    FontSize="14"
                    Foreground="White">
                    Default
                </TextBlock>
            </StackPanel>
            <!--  "Installed application"  -->
            <StackPanel
                Margin="5,0,0,10"
                Orientation="Horizontal">
                <RadioButton
                    Name="InstalledApplicationRadioButton"
                    GroupName="ExecutableType" />
                <TextBlock
                    Height="20"
                    VerticalAlignment="Stretch"
                    FontSize="14"
                    Foreground="White">
                    Installed application
                </TextBlock>
            </StackPanel>
            <!--  "Other executable"  -->
            <StackPanel
                Margin="5,0,0,0"
                Orientation="Horizontal">
                <RadioButton
                    Name="OtherExecutableRadioButton"
                    GroupName="ExecutableType" />
                <TextBlock
                    Height="20"
                    VerticalAlignment="Stretch"
                    FontSize="14"
                    Foreground="White">
                    Other executable
                </TextBlock>
            </StackPanel>
        </StackPanel>
        <!--  "Default" content  -->
        <Grid
            Grid.Row="1"
            x:Name="DefaultContent"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{Binding IsChecked, ElementName=DefaultRadioButton, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="The default program will be used."
                Foreground="White"
                FontSize="14" />
            <Grid
                Grid.Row="2"
                Margin="15,0,15,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!--  "Save" button for default  -->
                <Border
                    Grid.Column="2"
                    Height="30"
                    Margin="0,15,5,15"
                    HorizontalAlignment="Stretch"
                    CornerRadius="5">
                    <Border.Style>
                        <!--  Must use template here for button background to be overridden  -->
                        <Style TargetType="{x:Type Border}">
                            <Setter
                                Property="Background"
                                Value="#FF2DA65F" />
                            <Style.Triggers>
                                <!--  Hover/press styling  -->
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#FF37CC75" />
                                </Trigger>
                                <DataTrigger
                                    Binding="{Binding ElementName=SaveDefaultButton, Path=IsPressed}"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#FF34BF6E" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Button
                        Name="SaveDefaultButton"
                        BorderThickness="0,0,0,0"
                        Click="SaveDefaultButton_Click"
                        FontSize="14"
                        Foreground="White"
                        IsTabStop="True">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter
                                    Property="Background"
                                    Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    TextAlignment="Center"
                                                    LineHeight="20"
                                                    Text="Save" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger
                                        Property="IsMouseOver"
                                        Value="True">
                                        <Setter
                                            Property="Background"
                                            Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
                <!--  "Cancel" button for default  -->
                <Border
                    Grid.Column="3"
                    Height="30"
                    HorizontalAlignment="Stretch"
                    Margin="5,15,0,15"
                    CornerRadius="5">
                    <Border.Style>
                        <!--  Must use template here for button background to be overridden  -->
                        <Style TargetType="{x:Type Border}">
                            <Setter
                                Property="Background"
                                Value="#888888" />
                            <Style.Triggers>
                                <!--  Hover/press styling  -->
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#A8A8A8" />
                                </Trigger>
                                <DataTrigger
                                    Binding="{Binding ElementName=CancelDefaultButton, Path=IsPressed}"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#989898" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Button
                        Name="CancelDefaultButton"
                        BorderThickness="0,0,0,0"
                        Click="CancelButton_Click"
                        FontSize="14"
                        Foreground="White"
                        IsTabStop="True">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter
                                    Property="Background"
                                    Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    TextAlignment="Center"
                                                    LineHeight="20"
                                                    Text="Cancel" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger
                                        Property="IsMouseOver"
                                        Value="True">
                                        <Setter
                                            Property="Background"
                                            Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </Grid>
        </Grid>
        <!--  "Installed application" content  -->
        <Grid
            x:Name="InstalledApplicationContent"
            Grid.Row="1"
            Visibility="{Binding IsChecked, ElementName=InstalledApplicationRadioButton, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <!--  Application search bar  -->
            <Border
                Grid.Row="0"
                Margin="15,10,15,0"
                Padding="5,0,5,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="#FF444444"
                CornerRadius="5">
                <TextBox
                    Name="AppSearchBox"
                    VerticalContentAlignment="Stretch"
                    Background="#FF444444"
                    BorderBrush="#00000000"
                    BorderThickness="0,0,0,0"
                    FontFamily="Segoe UI"
                    FontSize="14"
                    MaxLines="1"
                    PreviewKeyDown="AppSearchBox_PreviewKeyDown"
                    SelectionBrush="#65FFFFFF"
                    TextWrapping="NoWrap">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter
                                Property="Text"
                                Value="{Binding AppSearchText, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter
                                Property="Foreground"
                                Value="White" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding ElementName=AppSearchBox, Path=IsFocused}"
                                            Value="False" />
                                        <Condition
                                            Binding="{Binding AppSearchText}"
                                            Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter
                                            Property="Text"
                                            Value="Search..." />
                                        <Setter
                                            Property="Foreground"
                                            Value="#FFAAAAAA" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Border>
            <Grid
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Visibility="{Binding AreAppsLoaded, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                <fa:ImageAwesome
                    Width="64"
                    Height="64"
                    Foreground="#FF2DA65F"
                    Icon="Refresh"
                    Spin="True" />
            </Grid>
            <!--  Application list  -->
            <ListBox
                Name="AppListBox"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Margin="15,10,15,10"
                Background="#002A2A2A"
                BorderBrush="#00000000"
                BorderThickness="0,0,0,0"
                Foreground="White"
                ItemsSource="{Binding FilteredApps}"
                SelectionChanged="AppListBox_SelectionChanged"
                Visibility="{Binding AreAppsLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                <!--  Style items to take up whole horizontal space  -->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter
                            Property="HorizontalAlignment"
                            Value="Stretch" />
                        <Setter
                            Property="HorizontalContentAlignment"
                            Value="Stretch" />
                        <Setter
                            Property="SnapsToDevicePixels"
                            Value="True" />
                        <!--  Override mouse-over/selection style (from https://stackoverflow.com/a/66207005)  -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border
                                        Name="Bd"
                                        Padding="{TemplateBinding Control.Padding}"
                                        Background="{TemplateBinding Panel.Background}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        CornerRadius="5"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                            Content="{TemplateBinding ContentControl.Content}"
                                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--  Mouse over item  -->
                                        <Trigger
                                            Property="UIElement.IsMouseOver"
                                            Value="True">
                                            <Setter
                                                TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="#FF3A3A3A" />
                                            <Setter
                                                TargetName="Bd"
                                                Property="Border.BorderBrush">
                                                <Setter.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <!--  Active selected item  -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition
                                                    Property="Selector.IsSelectionActive"
                                                    Value="True" />
                                                <Condition
                                                    Property="Selector.IsSelected"
                                                    Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter
                                                TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="#80417356" />
                                            <Setter
                                                TargetName="Bd"
                                                Property="Border.BorderBrush">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <!--  Inactive selected item  -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition
                                                    Property="Selector.IsSelectionActive"
                                                    Value="False" />
                                                <Condition
                                                    Property="Selector.IsSelected"
                                                    Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter
                                                TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="#80417356" />
                                            <Setter
                                                TargetName="Bd"
                                                Property="Border.BorderBrush">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger
                                            Property="UIElement.IsEnabled"
                                            Value="False">
                                            <Setter
                                                TargetName="Bd"
                                                Property="TextElement.Foreground">
                                                <Setter.Value>
                                                    <DynamicResource
                                                        ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="local:InstalledApplication">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image
                                Grid.Column="0"
                                Width="24"
                                Height="24"
                                Margin="5,5,10,5"
                                Source="{Binding BitmapIcon}" />
                            <TextBlock
                                Grid.Column="1"
                                Margin="3"
                                VerticalAlignment="Center"
                                FontSize="12"
                                Text="{Binding Name}" />
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Grid
                Grid.Row="2"
                Margin="15,0,15,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!--  Selected app preview  -->
                <StackPanel
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Visibility="{Binding Path=ShouldEnableSaveAppButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="0,0,10,0"
                        Text="Selected:"
                        FontSize="12"
                        VerticalAlignment="Center"
                        FontFamily="Segoe UI"
                        Foreground="#AAAAAA" />
                    <Image
                        Width="24"
                        Height="24"
                        Margin="0,0,10,0"
                        Source="{Binding Path=SelectedAppIcon}" />
                    <TextBlock
                        Text="{Binding Path=SelectedAppName}"
                        FontSize="12"
                        VerticalAlignment="Center"
                        Foreground="White" />
                </StackPanel>
                <!--  "Save" button for applications  -->
                <Border
                    Grid.Column="2"
                    Height="30"
                    Margin="0,15,5,15"
                    HorizontalAlignment="Stretch"
                    CornerRadius="5">
                    <Border.Style>
                        <!--  Must use template here for button background to be overridden  -->
                        <Style TargetType="{x:Type Border}">
                            <Setter
                                Property="Background"
                                Value="#505050" />
                            <Style.Triggers>
                                <!--  Show green background when enabled  -->
                                <DataTrigger
                                    Binding="{Binding ElementName=SaveAppButton ,Path=IsEnabled}"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#FF2DA65F" />
                                </DataTrigger>
                                <!--  Hover/press styling  -->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
                                            Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                            Value="True" />
                                        <Condition
                                            Binding="{Binding ElementName=SaveAppButton ,Path=IsEnabled}"
                                            Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter
                                        Property="Background"
                                        Value="#FF37CC75" />
                                </MultiDataTrigger>
                                <DataTrigger
                                    Binding="{Binding ElementName=SaveAppButton, Path=IsPressed}"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#FF34BF6E" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Button
                        Name="SaveAppButton"
                        BorderThickness="0,0,0,0"
                        Click="SaveAppButton_Click"
                        FontSize="14"
                        Foreground="White"
                        IsTabStop="True">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter
                                    Property="Background"
                                    Value="Transparent" />
                                <Setter Property="IsEnabled"
                                        Value="{Binding ShouldEnableSaveAppButton}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    TextAlignment="Center"
                                                    LineHeight="20"
                                                    Text="Save" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger
                                        Property="IsMouseOver"
                                        Value="True">
                                        <Setter
                                            Property="Background"
                                            Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
                <!--  "Cancel" button for applications  -->
                <Border
                    Grid.Column="3"
                    Height="30"
                    HorizontalAlignment="Stretch"
                    Margin="5,15,0,15"
                    CornerRadius="5">
                    <Border.Style>
                        <!--  Must use template here for button background to be overridden  -->
                        <Style TargetType="{x:Type Border}">
                            <Setter
                                Property="Background"
                                Value="#888888" />
                            <Style.Triggers>
                                <!--  Hover/press styling  -->
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#A8A8A8" />
                                </Trigger>
                                <DataTrigger
                                    Binding="{Binding ElementName=CancelAppButton, Path=IsPressed}"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#989898" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Button
                        Name="CancelAppButton"
                        BorderThickness="0,0,0,0"
                        Click="CancelButton_Click"
                        FontSize="14"
                        Foreground="White"
                        IsTabStop="True">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter
                                    Property="Background"
                                    Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    TextAlignment="Center"
                                                    LineHeight="20"
                                                    Text="Cancel" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger
                                        Property="IsMouseOver"
                                        Value="True">
                                        <Setter
                                            Property="Background"
                                            Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </Grid>
        </Grid>
        <Grid
            x:Name="OtherExecutableContent"
            Grid.Row="1"
            VerticalAlignment="Stretch"
            Visibility="{Binding IsChecked, ElementName=OtherExecutableRadioButton, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid
                Margin="15,10,15,0"
                VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    FontFamily="Segoe UI"
                    FontSize="14"
                    Foreground="White"
                    Text="Path:" />
                <!--  Path box  -->
                <Border
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="0,0,10,0"
                    Padding="5,0,5,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="#FF444444"
                    CornerRadius="5">
                    <TextBox
                        Name="ExecutablePathBox"
                        HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Background="#FF444444"
                        BorderBrush="#00000000"
                        BorderThickness="0,0,0,0"
                        FontFamily="Segoe UI"
                        FontSize="14"
                        MaxLines="1"
                        SelectionBrush="#65FFFFFF"
                        TextWrapping="NoWrap">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter
                                    Property="Text"
                                    Value="{Binding ExecutablePath, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter
                                    Property="Foreground"
                                    Value="White" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
                                                Binding="{Binding ElementName=ExecutablePathBox, Path=IsFocused}"
                                                Value="False" />
                                            <Condition
                                                Binding="{Binding ExecutablePath}"
                                                Value="" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter
                                                Property="Text"
                                                Value="Enter path to executable..." />
                                            <Setter
                                                Property="Foreground"
                                                Value="#FFAAAAAA" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Border>
                <!--  "Browse" button  -->
                <Button
                    Name="BrowseButton"
                    Grid.Row="0"
                    Grid.Column="2"
                    Width="80"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    BorderBrush="#00000000"
                    BorderThickness="0,0,0,0"
                    Click="BrowseButton_Click"
                    Content="Browse"
                    FontFamily="Segoe UI"
                    FontSize="14"
                    Foreground="White">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter
                                Property="Background"
                                Value="#FF2DA65F" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="5">
                                            <ContentPresenter
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#FF37CC75" />
                                </Trigger>
                                <Trigger
                                    Property="IsPressed"
                                    Value="True">
                                    <Setter
                                        Property="Background"
                                        Value="#FF34BF6E" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--  Other elements shown if path is valid  -->
                <Grid
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0,15,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--  Icon/name preview  -->
                    <StackPanel
                        Grid.Row="0"
                        Visibility="{Binding DoesExecutableExist, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="50,30,0,30"
                        Orientation="Horizontal">
                        <Image
                            Width="40"
                            Height="40"
                            Margin="0,0,15,0"
                            HorizontalAlignment="Left"
                            Source="{Binding ExecutableIcon}" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontFamily="Segoe UI"
                            FontSize="14"
                            FontWeight="Bold"
                            Foreground="White"
                            Text="{Binding ExecutableName}" />
                    </StackPanel>
                    <Grid
                        Grid.Row="1"
                        VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!--  "Save" button for executables  -->
                        <Border
                            Grid.Column="2"
                            Height="30"
                            Margin="0,15,5,15"
                            HorizontalAlignment="Stretch"
                            CornerRadius="5">
                            <Border.Style>
                                <!--  Must use template here for button background to be overridden  -->
                                <Style TargetType="{x:Type Border}">
                                    <Setter
                                        Property="Background"
                                        Value="#505050" />
                                    <Style.Triggers>
                                        <!--  Show green background when enabled  -->
                                        <DataTrigger
                                            Binding="{Binding ElementName=SaveExecutableButton, Path=IsEnabled}"
                                            Value="True">
                                            <Setter
                                                Property="Background"
                                                Value="#FF2DA65F" />
                                        </DataTrigger>
                                        <!--  Hover/press styling  -->
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                    Value="True" />
                                                <Condition
                                                    Binding="{Binding ElementName=SaveExecutableButton, Path=IsEnabled}"
                                                    Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter
                                                Property="Background"
                                                Value="#FF37CC75" />
                                        </MultiDataTrigger>
                                        <DataTrigger
                                            Binding="{Binding ElementName=SaveExecutableButton, Path=IsPressed}"
                                            Value="True">
                                            <Setter
                                                Property="Background"
                                                Value="#FF34BF6E" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Button
                                Name="SaveExecutableButton"
                                BorderThickness="0,0,0,0"
                                Click="SaveExecutableButton_Click"
                                FontSize="14"
                                Foreground="White"
                                IsTabStop="True">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter
                                            Property="Background"
                                            Value="Transparent" />
                                        <Setter Property="IsEnabled"
                                                Value="{Binding DoesExecutableExist}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <TextBlock
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            TextAlignment="Center"
                                                            LineHeight="20"
                                                            Text="Save" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger
                                                Property="IsMouseOver"
                                                Value="True">
                                                <Setter
                                                    Property="Background"
                                                    Value="Transparent" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Border>
                        <!--  "Cancel" button for executables  -->
                        <Border
                            Grid.Column="3"
                            Height="30"
                            HorizontalAlignment="Stretch"
                            Margin="5,15,0,15"
                            CornerRadius="5">
                            <Border.Style>
                                <!--  Must use template here for button background to be overridden  -->
                                <Style TargetType="{x:Type Border}">
                                    <Setter
                                        Property="Background"
                                        Value="#888888" />
                                    <Style.Triggers>
                                        <!--  Hover/press styling  -->
                                        <Trigger
                                            Property="IsMouseOver"
                                            Value="True">
                                            <Setter
                                                Property="Background"
                                                Value="#A8A8A8" />
                                        </Trigger>
                                        <DataTrigger
                                            Binding="{Binding ElementName=CancelExecutableButton, Path=IsPressed}"
                                            Value="True">
                                            <Setter
                                                Property="Background"
                                                Value="#989898" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Button
                                Name="CancelExecutableButton"
                                BorderThickness="0,0,0,0"
                                Click="CancelButton_Click"
                                FontSize="14"
                                Foreground="White"
                                IsTabStop="False">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter
                                            Property="Background"
                                            Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <TextBlock
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            TextAlignment="Center"
                                                            LineHeight="20"
                                                            Text="Cancel" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger
                                                Property="IsMouseOver"
                                                Value="True">
                                                <Setter
                                                    Property="Background"
                                                    Value="Transparent" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
