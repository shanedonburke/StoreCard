<UserControl x:Class="StoreCard.StoreCardListBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:StoreCard"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <ListBox
        Name="ItemListBox"
        Margin="10,10,10,10"
        Background="#002A2A2A"
        BorderBrush="#00000000"
        BorderThickness="0,0,0,0"
        Foreground="White"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoreCardListBox}}, Path=Items}"
        PreviewKeyDown="ItemListBox_PreviewKeyDown">
        <!--  Style items to take up whole horizontal space  -->
        <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
                <Setter
                    Property="HorizontalAlignment"
                    Value="Stretch" />
                <Setter
                    Property="HorizontalContentAlignment"
                    Value="Stretch" />
                <Setter
                    Property="SnapsToDevicePixels"
                    Value="True" />
                <!--  Override mouse-over/selection style (from https://stackoverflow.com/a/66207005)  -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                Name="ItemTemplateInner"
                                Padding="{TemplateBinding Control.Padding}"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                ContextMenu="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoreCardListBox}}, Path=ItemContextMenu}"
                                CornerRadius="5"
                                MouseDown="Item_MouseDown"
                                SnapsToDevicePixels="True">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  Mouse over item  -->
                                <Trigger
                                    Property="UIElement.IsMouseOver"
                                    Value="True">
                                    <Setter
                                        TargetName="ItemTemplateInner"
                                        Property="Panel.Background"
                                        Value="#FF3A3A3A" />
                                    <Setter
                                        TargetName="ItemTemplateInner"
                                        Property="Border.BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush>Transparent</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--  Active selected item  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="Selector.IsSelectionActive"
                                            Value="True" />
                                        <Condition
                                            Property="Selector.IsSelected"
                                            Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="ItemTemplateInner"
                                        Property="Panel.Background"
                                        Value="#80417356" />
                                    <Setter
                                        TargetName="ItemTemplateInner"
                                        Property="Border.BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <!--  Inactive selected item  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition
                                            Property="Selector.IsSelectionActive"
                                            Value="False" />
                                        <Condition
                                            Property="Selector.IsSelected"
                                            Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter
                                        TargetName="ItemTemplateInner"
                                        Property="Panel.Background"
                                        Value="#80417356" />
                                    <Setter
                                        TargetName="ItemTemplateInner"
                                        Property="Border.BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger
                                    Property="UIElement.IsEnabled"
                                    Value="False">
                                    <Setter
                                        TargetName="ItemTemplateInner"
                                        Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <DynamicResource
                                                ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListBox.ItemContainerStyle>
        <!--  List box item template  -->
        <ListBox.ItemTemplate>
            <DataTemplate DataType="local:SavedItem">
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="5,5,10,5"
                        Visibility="{Binding PrefixIcon, Converter={StaticResource NullVisibilityConverter}}"
                        Source="{Binding PrefixIcon}" />
                    <Image
                        Grid.Column="1"
                        Width="24"
                        Height="24"
                        Margin="5,5,10,5"
                        Source="{Binding BitmapIcon}" />
                    <TextBlock
                        Grid.Column="2"
                        Margin="3"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        FontSize="12"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap"
                        Text="{Binding Name}" />
                    <!--  Optional button  -->
                    <Border
                        Grid.Column="3"
                        Width="60"
                        Height="26"
                        Margin="5,0,5,0"
                        HorizontalAlignment="Right"
                        CornerRadius="5">
                        <Border.Style>
                            <!--  Must use template here for button background to be overridden  -->
                            <Style TargetType="{x:Type Border}">
                                <Setter
                                    Property="Background"
                                    Value="#FF2DA65F" />
                                <Setter
                                    Property="Visibility"
                                    Value="Hidden" />
                                <Style.Triggers>
                                    <!--  Hover/press styling  -->
                                    <Trigger
                                        Property="IsMouseOver"
                                        Value="True">
                                        <Setter
                                            Property="Background"
                                            Value="#FF37CC75" />
                                    </Trigger>
                                    <DataTrigger
                                        Binding="{Binding ElementName=ActionButton, Path=IsPressed}"
                                        Value="True">
                                        <Setter
                                            Property="Background"
                                            Value="#FF34BF6E" />
                                    </DataTrigger>
                                    <!--  Only show when the list item is selected  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
                                                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                                Value="True" />
                                            <Condition
                                                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoreCardListBox}}, Path=ShowActionButton}"
                                                Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter
                                                Property="Visibility"
                                                Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Button
                            Name="ActionButton"
                            BorderThickness="0,0,0,0"
                            Content="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoreCardListBox}}, Path=ActionButtonText}"
                            Foreground="White"
                            IsTabStop="False">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter
                                        Property="Background"
                                        Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger
                                            Property="IsMouseOver"
                                            Value="True">
                                            <Setter
                                                Property="Background"
                                                Value="Transparent" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Border>
                </Grid>
            </DataTemplate>
        </ListBox.ItemTemplate>
    </ListBox>
</UserControl>