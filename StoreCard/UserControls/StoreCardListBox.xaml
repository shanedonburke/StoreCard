<UserControl
    x:Class="StoreCard.UserControls.StoreCardListBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:effects="clr-namespace:StoreCard.Effects"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
    xmlns:items="clr-namespace:StoreCard.Models.Items"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:StoreCard.UserControls"
    d:DataContext="{d:DesignInstance Type=userControls:StoreCardListBox,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <ListBox
        Name="CustomListBox"
        Background="Transparent"
        BorderThickness="0,0,0,0"
        Foreground="{DynamicResource AppForegroundBrush}"
        KeyUp="CustomListBox_KeyUp"
        PreviewKeyDown="CustomListBox_PreviewKeyDown"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
        SelectionChanged="CustomListBox_SelectionChanged">
        <!--  Style items to take up whole horizontal space  -->
        <ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
                <!--  Override mouse-over/selection style (from https://stackoverflow.com/a/66207005)  -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                Name="ItemTemplateInner"
                                Padding="{TemplateBinding Control.Padding}"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                ContextMenu="{Binding ItemContextMenu, RelativeSource={RelativeSource AncestorType={x:Type userControls:StoreCardListBox}}}"
                                CornerRadius="5"
                                MouseDown="Item_MouseDown"
                                SnapsToDevicePixels="True">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  Mouse over item  -->
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter TargetName="ItemTemplateInner" Property="Panel.Background" Value="{DynamicResource ListBoxItemBrush_Hover}" />
                                    <Setter TargetName="ItemTemplateInner" Property="Border.BorderBrush" Value="Transparent" />
                                </Trigger>
                                <!--  Selected item  -->
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter TargetName="ItemTemplateInner" Property="Panel.Background" Value="{DynamicResource SelectedBackgroundBrush}" />
                                    <Setter TargetName="ItemTemplateInner" Property="Border.BorderBrush" Value="{DynamicResource SelectedBorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ListBox.ItemContainerStyle>
        <!--  List box item template  -->
        <ListBox.ItemTemplate>
            <DataTemplate DataType="{x:Type items:IListBoxItem}">
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Image
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="5"
                        RenderOptions.BitmapScalingMode="HighQuality"
                        Source="{Binding PrefixIcon}">
                        <Image.Effect>
                            <effects:ColorChangeEffect TargetBrush="{DynamicResource SecondaryTextBrush_Active}" />
                        </Image.Effect>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <!--  Visibility if prefix icons are enabled  -->
                                    <DataTrigger Binding="{Binding ShouldShowPrefixIcons, RelativeSource={RelativeSource AncestorType=userControls:StoreCardListBox}}" Value="True">
                                        <Setter Property="Visibility" Value="{Binding PrefixIcon, Converter={StaticResource NullToVisibilityConverter}, FallbackValue=Collapsed}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <!--  Icon is not null  -->
                    <Image
                        Grid.Column="1"
                        Width="24"
                        Height="24"
                        Margin="5,5,10,5"
                        RenderOptions.BitmapScalingMode="HighQuality"
                        Source="{Binding BitmapIcon}"
                        Visibility="{Binding BitmapIcon, Converter={StaticResource NullToVisibilityConverter}, FallbackValue=Collapsed}" />
                    <!--  Icon is null (show question mark icon)  -->
                    <fa:IconBlock
                        Grid.Column="1"
                        Margin="5,5,10,5"
                        FontSize="24"
                        Foreground="{DynamicResource SecondaryTextBrush_Active}"
                        Icon="QuestionCircle"
                        Visibility="{Binding BitmapIcon, Converter={StaticResource InverseNullToVisibilityConverter}, FallbackValue=Visible}" />
                    <TextBlock
                        Grid.Column="2"
                        Margin="3"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        FontSize="12"
                        Text="{Binding Name}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap" />
                    <!--  Secondary text  -->
                    <Label
                        Grid.Column="3"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Content="{Binding SecondaryText}">
                        <Label.Style>
                            <Style TargetType="Label">
                                <!--  Secondary text color when inactive  -->
                                <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush_Inactive}" />
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <!--  Make secondary text bolder when the item is active  -->
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush_Active}" />
                                    </DataTrigger>
                                    <!--  If ShowSecondaryText == Always, show secondary text  -->
                                    <DataTrigger Binding="{Binding ShowSecondaryText, RelativeSource={RelativeSource AncestorType=userControls:StoreCardListBox}, Converter={StaticResource ValueToStringConverter}}" Value="Always">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <!--  If ShowSecondaryText == WhenActive and the item is active, show secondary text  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ShowSecondaryText, RelativeSource={RelativeSource AncestorType=userControls:StoreCardListBox}, Converter={StaticResource ValueToStringConverter}}" Value="WhenActive" />
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <!--  Optional action button  -->
                    <userControls:StoreCardButton
                        x:Name="ActionButton"
                        Grid.Column="4"
                        Width="60"
                        Height="26"
                        Margin="5,0,5,0"
                        Click="ActionButton_Click"
                        FontSize="12"
                        IsTabStop="False"
                        Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type userControls:StoreCardListBox}}, Path=ActionButtonText}">
                        <userControls:StoreCardButton.Style>
                            <Style BasedOn="{StaticResource PrimaryButton}" TargetType="{x:Type userControls:StoreCardButton}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <!--  Only show when the list item is selected  -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True" />
                                            <Condition Binding="{Binding ShowActionButton, RelativeSource={RelativeSource AncestorType={x:Type userControls:StoreCardListBox}}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </userControls:StoreCardButton.Style>
                    </userControls:StoreCardButton>
                </Grid>
            </DataTemplate>
        </ListBox.ItemTemplate>
    </ListBox>
</UserControl>
