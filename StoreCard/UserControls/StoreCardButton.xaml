<UserControl
    x:Class="StoreCard.UserControls.StoreCardButton"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="clr-namespace:StoreCard.UserControls"
    d:DataContext="{d:DesignInstance Type=userControls:StoreCardButton,
                                     IsDesignTimeCreatable=False}"
    mc:Ignorable="d">
    <!--  Button background  -->
    <Border HorizontalAlignment="Stretch" CornerRadius="5">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <!--  Show disabled background by default  -->
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Style.Triggers>
                    <!--  Show normal background when enabled  -->
                    <DataTrigger Binding="{Binding ElementName=CustomButton, Path=IsEnabled}" Value="True">
                        <Setter Property="Background" Value="{Binding BackgroundBrush, RelativeSource={RelativeSource AncestorType={x:Type userControls:StoreCardButton}}}" />
                    </DataTrigger>
                    <!--  Hover styling  -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding ElementName=CustomButton, Path=IsEnabled}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type userControls:StoreCardButton}}, Path=HoverBackgroundBrush}" />
                    </MultiDataTrigger>
                    <!--  Press styling  -->
                    <DataTrigger Binding="{Binding ElementName=CustomButton, Path=IsPressed}" Value="True">
                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type userControls:StoreCardButton}}, Path=PressedBackgroundBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <!--  The button itself  -->
        <Button
            Name="CustomButton"
            BorderThickness="0"
            Click="CustomButton_Click"
            FocusVisualStyle="{DynamicResource FocusVisual}"
            FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type userControls:StoreCardButton}}}"
            IsTabStop="{Binding IsTabStop, RelativeSource={RelativeSource AncestorType=userControls:StoreCardButton}}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type userControls:StoreCardButton}}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}">
                                    <Label
                                        Padding="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Content="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type userControls:StoreCardButton}}}">
                                        <Label.Style>
                                            <Style TargetType="{x:Type Label}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                                                        <!--  Font color when disabled  -->
                                                        <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                                                        <!--  Font color when enabled  -->
                                                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=userControls:StoreCardButton}}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <!--  Override default styling  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Border>
</UserControl>
