<Window x:Class="StoreCard.AddApplicationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StoreCard"
        mc:Ignorable="d"
        Title="Add Application"
        Closed="Window_Closed"
        WindowStartupLocation="CenterScreen"
        Height="600"
        Width="800"
        Background="#FF222222">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="ControlVisibility" />

        <!-- Control colors -->
        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF666666</Color>
        <Color x:Key="ControlMouseOverColor">#FF444444</Color>
        <Color x:Key="ControlPressedColor">#FF333333</Color>
        <Color x:Key="GlyphColor">#FF444444</Color>

        <!-- Not currently used... but later? -->
        <LinearGradientBrush x:Key="MenuPopupBrush"
                             EndPoint="0.5,1"
                             StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                          Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                             StartPoint="0,0"
                             EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                                  Offset="0" />
                    <GradientStop Color="#600000FF"
                                  Offset="0.4" />
                    <GradientStop Color="#600000FF"
                                  Offset="0.6" />
                    <GradientStop Color="#000000FF"
                                  Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- Radio button styling -->
        <Style x:Key="{x:Type RadioButton}"
               TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Margin"
                    Value="0,0,5,0" />
            <Setter Property="BorderThickness"
                    Value="0,0,0,0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <!-- Radio button focus styling -->
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid Width="15"
                                          Height="15">
                                        <!-- Margins...??? -->
                                        <Ellipse Stroke="#FF2DA65F"
                                                 Margin="-3.5,-1,0.5,-1"
                                                 StrokeThickness="1.5" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <!-- Radio button template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <!-- Radio button bullet -->
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="15"
                                      Height="15">
                                    <Ellipse x:Name="Border"
                                             StrokeThickness="1">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                                      Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="CheckMark"
                                             Margin="4"
                                             Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!-- Radio button visual states -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Stroke).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Stroke).
                                                                          (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!-- Radio buttons -->
        <StackPanel Margin="10">
            <Label Foreground="White"
                   FontSize="14"
                   Margin="0,0,0,10">Select an application to save:</Label>
            <!-- "Installed application" -->
            <StackPanel Orientation="Horizontal"
                        Margin="5,0,0,10">
                <RadioButton GroupName="ApplicationType"
                             Name="InstalledApplicationRadioButton"
                             IsChecked="True">
                </RadioButton>
                <TextBlock Foreground="White"
                           FontSize="14"
                           VerticalAlignment="Stretch"
                           Height="20">Installed application
                </TextBlock>
            </StackPanel>
            <!-- "Other executable" -->
            <StackPanel Orientation="Horizontal"
                        Margin="5,0,0,0">
                <RadioButton GroupName="ApplicationType"
                             Name="OtherExecutableRadioButton">
                </RadioButton>
                <TextBlock Foreground="White"
                           FontSize="14"
                           VerticalAlignment="Stretch"
                           Height="20">Other executable
                </TextBlock>
            </StackPanel>
        </StackPanel>
        <!-- "Installed application" content -->
        <Grid Grid.Row="1"
              Visibility="{Binding IsChecked, ElementName=InstalledApplicationRadioButton, Converter={StaticResource ControlVisibility}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!-- Application search bar -->
            <Border CornerRadius="5"
                    HorizontalAlignment="Stretch"
                    Padding="5,0,5,0"
                    Margin="10,10,10,0"
                    VerticalAlignment="Stretch"
                    Background="#FF444444">
                <TextBox Name="SearchBox"
                         PreviewKeyDown="SearchBox_PreviewKeyDown"
                         FontFamily="Segoe UI"
                         FontSize="14"
                         MaxLines="1"
                         VerticalContentAlignment="Stretch"
                         TextWrapping="NoWrap"
                         Background="#FF444444"
                         SelectionBrush="#65FFFFFF"
                         BorderBrush="#00000000"
                         BorderThickness="0,0,0,0">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Text"
                                    Value="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="Foreground"
                                    Value="White" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=SearchBox, Path=IsFocused}"
                                                   Value="False" />
                                        <Condition Binding="{Binding SearchText}"
                                                   Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Text"
                                                Value="Search..." />
                                        <Setter Property="Foreground"
                                                Value="#FFAAAAAA" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Border>
            <!-- Application list -->
            <ListBox Margin="10,10,10,10"
                     Name="ApplicationListBox"
                     PreviewKeyDown="ApplicationListBox_PreviewKeyDown"
                     Grid.Row="1"
                     ItemsSource="{Binding FilteredApps}"
                     Grid.ColumnSpan="2"
                     IsTabStop="False"
                     Background="#002A2A2A"
                     BorderBrush="#00000000"
                     Foreground="White"
                     BorderThickness="0,0,0,0">
                <!-- Style items to take up whole horizontal space -->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalAlignment"
                                Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                        <Setter Property="SnapsToDevicePixels"
                                Value="True" />
                        <Setter Property="IsTabStop"
                                Value="False" />
                        <!-- Override mouse-over/selection style (from https://stackoverflow.com/a/66207005) -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            Padding="{TemplateBinding Control.Padding}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            Background="{TemplateBinding Panel.Background}"
                                            CornerRadius="5"
                                            Name="Bd"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Mouse over item -->
                                        <Trigger Property="UIElement.IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Panel.Background"
                                                    TargetName="Bd"
                                                    Value="#FF3A3A3A" />
                                            <Setter Property="Border.BorderBrush"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <!-- Active selected item -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="True" />
                                                <Condition Property="Selector.IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background"
                                                    TargetName="Bd"
                                                    Value="#80417356" />
                                            <Setter Property="Border.BorderBrush"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <!-- Inactive selected item -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="False" />
                                                <Condition Property="Selector.IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background"
                                                    TargetName="Bd"
                                                    Value="#80417356" />
                                            <Setter Property="Border.BorderBrush"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger Property="UIElement.IsEnabled"
                                                 Value="False">
                                            <Setter Property="TextElement.Foreground"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Margin="5,5,10,5"
                                   Grid.Column="0"
                                   Source="{Binding BitmapIcon}"
                                   Width="24"
                                   Height="24" />
                            <TextBlock Margin="3"
                                       Grid.Column="1"
                                       Text="{Binding Name}"
                                       FontSize="12"
                                       VerticalAlignment="Center" />
                            <!-- "Add" button -->
                            <Border Grid.Column="2"
                                    HorizontalAlignment="Right"
                                    CornerRadius="5"
                                    Margin="5,0,5,0"
                                    Width="60"
                                    Height="26">
                                <Border.Style>
                                    <!-- Must use template here for button background to be overridden -->
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Background"
                                                Value="#FF2DA65F" />
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                        <Style.Triggers>
                                            <!-- Hover/press styling -->
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="#FF37CC75" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding ElementName=AddButton, Path=IsPressed}"
                                                         Value="True">
                                                <Setter Property="Background"
                                                        Value="#FF34BF6E" />
                                            </DataTrigger>
                                            <!-- Only show when the list item is selected -->
                                            <DataTrigger Value="True"
                                                         Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Button Click="AddButton_Click"
                                        Name="AddButton"
                                        IsTabStop="False"
                                        BorderThickness="0,0,0,0"
                                        Content="Add"
                                        Foreground="White">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Background"
                                                    Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}">
                                                            <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            Value="Transparent" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
        <!-- "Other executable" content -->
        <Grid Grid.Row="1"
              VerticalAlignment="Top"
              Visibility="{Binding IsChecked, ElementName=OtherExecutableRadioButton, Converter={StaticResource ControlVisibility}}">
            <Grid Margin="15,10,15,10"
                  VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        CornerRadius="5"
                        HorizontalAlignment="Stretch"
                        Padding="5,0,5,0"
                        Margin="0,0,10,0"
                        VerticalAlignment="Stretch"
                        Background="#FF444444">
                    <TextBox Name="ExecutablePathBox"
                             FontFamily="Segoe UI"
                             FontSize="14"
                             MaxLines="1"
                             VerticalContentAlignment="Stretch"
                             HorizontalAlignment="Stretch"
                             TextWrapping="NoWrap"
                             Background="#FF444444"
                             SelectionBrush="#65FFFFFF"
                             BorderBrush="#00000000"
                             BorderThickness="0,0,0,0">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Text"
                                        Value="{Binding ExecutablePath, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter Property="Foreground"
                                        Value="White" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=ExecutablePathBox, Path=IsFocused}"
                                                       Value="False" />
                                            <Condition Binding="{Binding ExecutablePath}"
                                                       Value="" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Text"
                                                    Value="Enter path to executable..." />
                                            <Setter Property="Foreground"
                                                    Value="#FFAAAAAA" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Border>
                <Button Grid.Column="1"
                        Content="Browse"
                        Width="80"
                        BorderBrush="#00000000"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Foreground="White"
                        FontSize="14"
                        VerticalContentAlignment="Center"
                        FontFamily="Arial"
                        BorderThickness="0,0,0,0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background"
                                    Value="#FF2DA65F" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"
                                                CornerRadius="5">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#FF37CC75" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#FF34BF6E" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
