<Application x:Class="StoreCard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:StoreCard"
             ShutdownMode="OnLastWindowClose"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <local:NullVisibilityConverter x:Key="NullVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!-- Control colors -->
        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF666666</Color>
        <Color x:Key="ControlMouseOverColor">#FF444444</Color>
        <Color x:Key="ControlPressedColor">#FF333333</Color>
        <Color x:Key="GlyphColor">#FF444444</Color>
        <!-- Scroll bar -->
        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2"
                                x:Name="ThumbBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background"
                                            Value="#2F2F2F" />
                                </Style>
                            </Border.Style>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="ThumbBorder"
                                        Value="#444444" />
                            </Trigger>
                            <Trigger Property="IsDragging"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="ThumbBorder"
                                        Value="#4F4F4F" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border CornerRadius="2"
                        Background="Transparent" />
                <Track x:Name="PART_Track"
                       Grid.Row="0"
                       IsDirectionReversed="true">
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
                               Margin="2,0,2,0"
                               BorderBrush="Transparent">
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Width"
                            Value="18" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Radio button -->
        <Style x:Key="{x:Type RadioButton}"
               TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="true" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Margin"
                    Value="0,0,5,0" />
            <Setter Property="BorderThickness"
                    Value="0,0,0,0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <!-- Radio button focus styling -->
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid Width="15"
                                          Height="15">
                                        <!-- Margins...??? -->
                                        <Ellipse Stroke="#FF2DA65F"
                                                 Margin="-3.5,-1,0.5,-1"
                                                 StrokeThickness="1.5" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <!-- Radio button template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <!-- Radio button bullet -->
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="15"
                                      Height="15">
                                    <Ellipse x:Name="Border"
                                             StrokeThickness="1">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                                      Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="CheckMark"
                                             Margin="4"
                                             Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!-- Radio button visual states -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Stroke).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Stroke).
                                                                          (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="ListBoxTemplate">
            <ListBox
                Name="ItemListBox"
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="10,10,10,10"
                Background="#002A2A2A"
                BorderBrush="#00000000"
                BorderThickness="0,0,0,0"
                Foreground="White"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding Path=Items}"
                PreviewKeyDown="{Binding Path=PreviewKeyDown}">
                <!--  Style items to take up whole horizontal space  -->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter
                            Property="HorizontalAlignment"
                            Value="Stretch" />
                        <Setter
                            Property="HorizontalContentAlignment"
                            Value="Stretch" />
                        <Setter
                            Property="SnapsToDevicePixels"
                            Value="True" />
                        <!--  Override mouse-over/selection style (from https://stackoverflow.com/a/66207005)  -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border
                                        Name="Bd"
                                        Padding="{TemplateBinding Control.Padding}"
                                        Background="{TemplateBinding Panel.Background}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        ContextMenu="{Binding Path=ItemContextMenu}"
                                        CornerRadius="5"
                                        MouseDown="{Binding Path=ItemMouseDown}"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                            Content="{TemplateBinding ContentControl.Content}"
                                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--  Mouse over item  -->
                                        <Trigger
                                            Property="UIElement.IsMouseOver"
                                            Value="True">
                                            <Setter
                                                TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="#FF3A3A3A" />
                                            <Setter
                                                TargetName="Bd"
                                                Property="Border.BorderBrush">
                                                <Setter.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <!--  Active selected item  -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition
                                                    Property="Selector.IsSelectionActive"
                                                    Value="True" />
                                                <Condition
                                                    Property="Selector.IsSelected"
                                                    Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter
                                                TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="#80417356" />
                                            <Setter
                                                TargetName="Bd"
                                                Property="Border.BorderBrush">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <!--  Inactive selected item  -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition
                                                    Property="Selector.IsSelectionActive"
                                                    Value="False" />
                                                <Condition
                                                    Property="Selector.IsSelected"
                                                    Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter
                                                TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="#80417356" />
                                            <Setter
                                                TargetName="Bd"
                                                Property="Border.BorderBrush">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger
                                            Property="UIElement.IsEnabled"
                                            Value="False">
                                            <Setter
                                                TargetName="Bd"
                                                Property="TextElement.Foreground">
                                                <Setter.Value>
                                                    <DynamicResource
                                                        ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <!--  List box item template  -->
                <ListBox.ItemTemplate>
                    <DataTemplate DataType="local:SavedItem">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Image
                                Grid.Column="0"
                                Width="24"
                                Height="24"
                                Margin="5,5,10,5"
                                Visibility="{Binding PrefixIcon, Converter={StaticResource NullVisibilityConverter}}"
                                Source="{Binding PrefixIcon}" />
                            <Image
                                Grid.Column="1"
                                Width="24"
                                Height="24"
                                Margin="5,5,10,5"
                                Source="{Binding BitmapIcon}" />
                            <TextBlock
                                Grid.Column="2"
                                Margin="3"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                FontSize="12"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap"
                                Text="{Binding Name}" />
                            <!--  Optional button  -->
                            <Border
                                Grid.Column="3"
                                Visibility="{Binding Path=ShowButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Width="60"
                                Height="26"
                                Margin="5,0,5,0"
                                HorizontalAlignment="Right"
                                CornerRadius="5">
                                <Border.Style>
                                    <!--  Must use template here for button background to be overridden  -->
                                    <Style TargetType="{x:Type Border}">
                                        <Setter
                                            Property="Background"
                                            Value="#FF2DA65F" />
                                        <Setter
                                            Property="Visibility"
                                            Value="Hidden" />
                                        <Style.Triggers>
                                            <!--  Hover/press styling  -->
                                            <Trigger
                                                Property="IsMouseOver"
                                                Value="True">
                                                <Setter
                                                    Property="Background"
                                                    Value="#FF37CC75" />
                                            </Trigger>
                                            <DataTrigger
                                                Binding="{Binding ElementName=OpenButton, Path=IsPressed}"
                                                Value="True">
                                                <Setter
                                                    Property="Background"
                                                    Value="#FF34BF6E" />
                                            </DataTrigger>
                                            <!--  Only show when the list item is selected  -->
                                            <DataTrigger
                                                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                                Value="True">
                                                <Setter
                                                    Property="Visibility"
                                                    Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Button
                                    Name="OpenButton"
                                    BorderThickness="0,0,0,0"
                                    Click="{Binding Path=ButtonClick}"
                                    Content="Open"
                                    Foreground="White"
                                    IsTabStop="False">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter
                                                Property="Background"
                                                Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}">
                                                            <ContentPresenter
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger
                                                    Property="IsMouseOver"
                                                    Value="True">
                                                    <Setter
                                                        Property="Background"
                                                        Value="Transparent" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DataTemplate>
    </Application.Resources>
</Application>
