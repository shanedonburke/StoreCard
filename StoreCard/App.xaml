<Application x:Class="StoreCard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:StoreCard"
             ShutdownMode="OnLastWindowClose"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <local:NullVisibilityConverter x:Key="NullVisibilityConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />

        <!-- Control colors -->
        <Color x:Key="AppBackgroundColor">#222222</Color>
        <Color x:Key="ControlPrimaryColor">#2DA65F</Color>
        <Color x:Key="ControlPrimaryColor_Hover">#37CC75</Color>
        <Color x:Key="ControlPrimaryColor_Pressed">#34BF6E</Color>
        <Color x:Key="ControlLightColor">#444444</Color>
        <Color x:Key="ControlLightColor_Hover">#666666</Color>
        <Color x:Key="ControlLightColor_Pressed">#555555</Color>
        <Color x:Key="ButtonDisabledBackgroundColor">#363636</Color>
        <Color x:Key="ButtonDisabledTextColor">#6F6F6F</Color>

        <SolidColorBrush x:Key="AppBackgroundColor_Brush" Color="{StaticResource AppBackgroundColor}" />
        <SolidColorBrush x:Key="ControlPrimaryColor_Brush" Color="{StaticResource ControlPrimaryColor}" />
        <SolidColorBrush x:Key="ControlLightColor_Brush" Color="{StaticResource ControlLightColor}" />
        <SolidColorBrush x:Key="ControlLightColor_Hover_Brush" Color="{StaticResource ControlLightColor_Hover}" />
        <SolidColorBrush x:Key="ControlLightColor_Pressed_Brush" Color="{StaticResource ControlLightColor_Pressed}" />

        <!-- Scroll bar -->
        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2"
                                x:Name="ThumbBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter
                                        Property="Background"
                                        Value="{StaticResource ControlLightColor_Brush}" />
                                </Style>
                            </Border.Style>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter
                                    Property="Background"
                                    TargetName="ThumbBorder"
                                    Value="{StaticResource ControlLightColor_Hover_Brush}" />
                            </Trigger>
                            <Trigger Property="IsDragging"
                                     Value="True">
                                <Setter
                                    Property="Background"
                                    TargetName="ThumbBorder"
                                    Value="{StaticResource ControlLightColor_Pressed_Brush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border CornerRadius="2"
                        Background="Transparent" />
                <Track x:Name="PART_Track"
                       Grid.Row="0"
                       IsDirectionReversed="True">
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
                               Margin="2,0,2,0"
                               BorderBrush="Transparent">
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Width"
                            Value="18" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Radio button -->
        <Style x:Key="{x:Type RadioButton}"
               TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Margin"
                    Value="0,0,5,0" />
            <Setter Property="BorderThickness"
                    Value="0,0,0,0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <!-- Radio button focus styling -->
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style TargetType="Control">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid Width="15"
                                          Height="15">
                                        <!-- Margins...??? -->
                                        <Ellipse
                                            Margin="-3.5,-1,0.5,-1"
                                            Stroke="{StaticResource ControlPrimaryColor_Brush}"
                                            StrokeThickness="1.5" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <!-- Radio button template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <!-- Radio button bullet -->
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="15"
                                      Height="15">
                                    <Ellipse x:Name="Border"
                                             StrokeThickness="1">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="White" />
                                                        <GradientStop Color="{StaticResource ControlLightColor_Hover}"
                                                                      Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="CheckMark"
                                             Margin="4"
                                             Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <SolidColorBrush Color="#3F3F3F" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!-- Radio button visual states -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlLightColor_Hover}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlLightColor_Pressed}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Fill).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Stroke).
                                                                          (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Shape.Stroke).
                                                                          (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type CheckBox}"
               TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="FocusVisualStyle"
                    Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                        Width="16"
                                        Height="16"
                                        CornerRadius="1"
                                        BorderThickness="1">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter
                                                Property="Background"
                                                Value="#333333" />
                                            <Setter
                                                Property="BorderBrush"
                                                Value="#777777" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=CheckBox}, Path=IsMouseOver}"
                                                    Value="True">
                                                    <Setter
                                                        Property="Background"
                                                        Value="#444444" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <Path Width="12"
                                              Height="12"
                                              x:Name="CheckMark"
                                              SnapsToDevicePixels="False"
                                              StrokeThickness="2"
                                              Data="M 1.5 5 L 5.5 10.5 M 5.5 10.5 L 11 1"
                                              Stroke="{StaticResource ControlPrimaryColor_Brush}"
                                              Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=CheckBox}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>