<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StoreCard"
        xmlns:Collections="clr-namespace:System.Collections;assembly=System.Runtime"
        x:Class="StoreCard.MainWindow"
        FocusManager.FocusedElement="{Binding ElementName=SearchBox}"
        PreviewKeyDown="Window_PreviewKeyDown"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="NoResize"
        AllowsTransparency="True"
        mc:Ignorable="d"
        Title="StoreCard"
        Height="600"
        Width="500"
        Background="Transparent">
    <Window.Resources>
        <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
            <StackPanel Margin="0,0,0,0"
                        Background="White" />
        </ItemsPanelTemplate>
        <ContextMenu x:Key="AddItemMenuKey">
            <ContextMenu.Style>
                <Style TargetType="{x:Type ContextMenu}">
                    <Setter Property="ItemsPanel"
                            Value="{StaticResource MenuItemPanelTemplate}" />
                </Style>
            </ContextMenu.Style>
            <!--<Separator>
                <Separator.Template>
                    <ControlTemplate TargetType="Separator">
                        <StackPanel>
                            <TextBlock Text="Test!!!" />
                            <Separator/>
                        </StackPanel>
                    </ControlTemplate>
                </Separator.Template>
            </Separator>-->
            <MenuItem x:Name="AddApplication"
                      Click="AddApplication_Click">
                <MenuItem.Header>
                    <TextBlock Text="Add Application"
                               Margin="-20,0,0,0" />
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Name="AddFile"
                      Click="AddFile_Click">
                <MenuItem.Header>
                    <TextBlock Text="Add File"
                               Margin="-20,0,0,0" />
                </MenuItem.Header>
            </MenuItem>
            <MenuItem x:Name="AddLink"
                      Click="AddLink_Click">
                <MenuItem.Header>
                    <TextBlock Text="Add Link"
                               Margin="-20,0,0,0" />
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>
    </Window.Resources>
    <Border CornerRadius="5"
            Padding="10"
            Background="#FF222222">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Content="+"
                        BorderBrush="#00000000"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Foreground="White"
                        FontSize="24"
                        VerticalContentAlignment="Center"
                        FontWeight="Bold"
                        FontFamily="Arial"
                        Margin="10,10,0,0"
                        BorderThickness="0,0,0,0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="ContextMenu"
                                    Value="{StaticResource AddItemMenuKey}" />
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="#FF444444" />
                                </Trigger>
                                <EventTrigger RoutedEvent="Click">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Border CornerRadius="5"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Padding="5,0,5,0"
                        Margin="10,10,10,0"
                        VerticalAlignment="Stretch"
                        Background="#FF444444">
                    <TextBox Name="SearchBox"
                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                             PreviewKeyDown="SearchBox_PreviewKeyDown"
                             FontFamily="Segoe UI"
                             FontSize="14"
                             MaxLines="1"
                             VerticalContentAlignment="Stretch"
                             TextWrapping="NoWrap"
                             Background="#FF444444"
                             SelectionBrush="#65FFFFFF"
                             Foreground="White"
                             BorderBrush="#00000000"
                             BorderThickness="0,0,0,0" />
                </Border>
            </Grid>
            <ListBox Margin="10,10,10,10"
                     Name="ItemListBox"
                     PreviewKeyDown="ItemListBox_PreviewKeyDown"
                     Grid.Row="1"
                     ItemsSource="{Binding FilteredItems}"
                     Grid.ColumnSpan="2"
                     KeyboardNavigation.TabNavigation="Once"
                     Background="#002A2A2A"
                     BorderBrush="#00000000"
                     Foreground="White"
                     BorderThickness="0,0,0,0">
                <!-- Style items to take up whole horizontal space -->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalAlignment"
                                Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                        <Setter Property="SnapsToDevicePixels"
                                Value="True" />
                        <!-- Override mouse-over/selection style (from https://stackoverflow.com/a/66207005) -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            Padding="{TemplateBinding Control.Padding}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            Background="{TemplateBinding Panel.Background}"
                                            Name="Bd"
                                            SnapsToDevicePixels="True">
                                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Mouse over item -->
                                        <Trigger Property="UIElement.IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Panel.Background"
                                                    TargetName="Bd"
                                                    Value="#FF3A3A3A" />
                                            <Setter Property="Border.BorderBrush"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <!-- Active selected item -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="True" />
                                                <Condition Property="Selector.IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background"
                                                    TargetName="Bd"
                                                    Value="#80417356" />
                                            <Setter Property="Border.BorderBrush"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <!-- Inactive selected item -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="False" />
                                                <Condition Property="Selector.IsSelected"
                                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background"
                                                    TargetName="Bd"
                                                    Value="#80417356" />
                                            <Setter Property="Border.BorderBrush"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF3BD97D</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger Property="UIElement.IsEnabled"
                                                 Value="False">
                                            <Setter Property="TextElement.Foreground"
                                                    TargetName="Bd">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Margin="5,5,10,5"
                                   Grid.Column="0"
                                   Source="{Binding BitmapIcon}"
                                   Width="24"
                                   Height="24" />
                            <TextBlock Margin="3"
                                       Grid.Column="1"
                                       Text="{Binding Name}"
                                       FontSize="12"
                                       VerticalAlignment="Center" />
                            <!-- "Open" button -->
                            <Button Grid.Column="2"
                                    Click="OpenButton_Click"
                                    IsTabStop="False"
                                    HorizontalAlignment="Right"
                                    Margin="5,0,5,0"
                                    BorderThickness="0,0,0,0"
                                    Foreground="White"
                                    Width="60"
                                    Height="26">
                                <Button.Style>
                                    <!-- Must use template here for button background to be overridden -->
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Content"
                                                Value="Open" />
                                        <Setter Property="Background"
                                                Value="#FF2DA65F" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                        <Style.Triggers>
                                            <!-- Hover/press styling -->
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="#FF268C51" />
                                            </Trigger>
                                            <Trigger Property="IsPressed"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="#FF228049" />
                                            </Trigger>
                                            <!-- Only show when the list item is selected -->
                                            <DataTrigger Value="True"
                                                         Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Border>
</Window>
