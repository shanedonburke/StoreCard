<Window
    x:Class="StoreCard.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:saved="clr-namespace:StoreCard.Models.Items.Saved"
    xmlns:userControls="clr-namespace:StoreCard.UserControls"
    xmlns:windows="clr-namespace:StoreCard.Windows"
    Title="StoreCard"
    Width="540"
    Height="655"
    d:DataContext="{d:DesignInstance Type=windows:MainWindow,
                                     IsDesignTimeCreatable=False}"
    Activated="MainWindow_Activated"
    AllowsTransparency="True"
    Background="Transparent"
    Deactivated="Window_Deactivated"
    FocusManager.FocusedElement="{Binding ElementName=SearchBox}"
    PreviewKeyDown="Window_PreviewKeyDown"
    ResizeMode="NoResize"
    ShowActivated="True"
    ShowInTaskbar="False"
    Topmost="True"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <!--  Main content  -->
    <Border
        Margin="20"
        Padding="10"
        Background="{DynamicResource AppBackgroundBrush}"
        CornerRadius="5">
        <Border.Effect>
            <DropShadowEffect
                BlurRadius="25"
                Direction="-75"
                Opacity="0.8"
                ShadowDepth="2" />
        </Border.Effect>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="40" />
                <RowDefinition Height="40" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <!--  "+" button  -->
                <Button
                    Name="AddButton"
                    Grid.Column="0"
                    Margin="10,10,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    BorderBrush="Transparent"
                    BorderThickness="0,0,0,0"
                    Click="AddButton_Click"
                    FocusVisualStyle="{DynamicResource FocusVisual}"
                    FontFamily="Arial"
                    FontSize="24"
                    Foreground="{DynamicResource AppForegroundBrush}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource IconButtonBackgroundBrush_Hover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource IconButtonBackgroundBrush_Pressed}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding ElementName=AddButtonContextMenu, Path=IsOpen}" Value="True">
                                    <Setter Property="Background" Value="Transparent" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <!--  "+" button context menu  -->
                    <Button.ContextMenu>
                        <ContextMenu Name="AddButtonContextMenu">
                            <MenuItem
                                x:Name="AddApplication"
                                Click="AddApplication_Click"
                                Header="Add App or Game..." />
                            <MenuItem
                                Name="AddFile"
                                Click="AddFile_Click"
                                Header="Add File or Folder..." />
                            <MenuItem
                                x:Name="AddLink"
                                Click="AddLink_Click"
                                Header="Add Link..." />
                        </ContextMenu>
                    </Button.ContextMenu>
                    <fa:IconBlock
                        FontSize="18"
                        Foreground="{DynamicResource AppForegroundBrush}"
                        Icon="Plus" />
                </Button>
                <!--  Search box  -->
                <userControls:StoreCardTextBox
                    x:Name="SearchBox"
                    Grid.Column="1"
                    Margin="10,10,10,0"
                    ActivePlaceholder="Start typing to search..."
                    InactivePlaceholder="Click to search..."
                    PreviewKeyDown="SearchBox_PreviewKeyDown"
                    TextChanged="SearchBox_TextChanged" />
                <!--  Settings button  -->
                <Button
                    Name="SettingsButton"
                    Grid.Column="2"
                    Margin="0,10,10,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    BorderBrush="Transparent"
                    BorderThickness="0,0,0,0"
                    Click="SettingsButton_Click"
                    FocusVisualStyle="{DynamicResource FocusVisual}"
                    FontSize="24"
                    Foreground="{DynamicResource AppForegroundBrush}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource IconButtonBackgroundBrush_Hover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource IconButtonBackgroundBrush_Pressed}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <fa:IconBlock
                        FontSize="18"
                        Foreground="{DynamicResource AppForegroundBrush}"
                        Icon="Wrench" />
                </Button>
            </Grid>
            <!--  Item categories  -->
            <Border
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="0,10,0,0"
                Padding="10,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <StackPanel
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Orientation="Horizontal">
                    <userControls:ItemCategoryButton
                        CategoryName="None"
                        Click="AllCategoryButton_Click"
                        SelectedCategory="{Binding Category, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}"
                        Text="All" />
                    <userControls:ItemCategoryButton
                        CategoryName="Recent"
                        Click="RecentCategoryButton_Click"
                        SelectedCategory="{Binding Category, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}"
                        Text="Recent" />
                    <userControls:ItemCategoryButton
                        CategoryName="App"
                        Click="AppsCategoryButton_Click"
                        SelectedCategory="{Binding Category, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}"
                        Text="Apps" />
                    <userControls:ItemCategoryButton
                        CategoryName="Game"
                        Click="GamesCategoryButton_Click"
                        SelectedCategory="{Binding Category, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}"
                        Text="Games" />
                    <userControls:ItemCategoryButton
                        CategoryName="File"
                        Click="FilesCategoryButton_Click"
                        SelectedCategory="{Binding Category, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}"
                        Text="Files" />
                    <userControls:ItemCategoryButton
                        CategoryName="Folder"
                        Click="FoldersCategoryButton_Click"
                        SelectedCategory="{Binding Category, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}"
                        Text="Folders" />
                    <userControls:ItemCategoryButton
                        CategoryName="Link"
                        Click="LinksCategoryButton_Click"
                        SelectedCategory="{Binding Category, RelativeSource={RelativeSource AncestorType=windows:MainWindow}}"
                        Text="Links" />
                </StackPanel>
            </Border>
            <!--  Saved items  -->
            <userControls:StoreCardListBox
                x:Name="ItemListBox"
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="10,10,10,10"
                ActionButtonClick="OpenButton_Click"
                ActionButtonText="Open"
                ItemDoubleClick="ListBoxItem_DoubleClick"
                PreviewKeyDown="ItemListBox_PreviewKeyDown"
                ShowActionButton="True">
                <userControls:StoreCardListBox.ItemContextMenu>
                    <ContextMenu d:DataContext="{d:DesignInstance saved:SavedItem}">
                        <MenuItem Click="OpenMenuItem_Click" Header="Open" />
                        <MenuItem Click="EditFileMenuItem_Click" Header="Edit...">
                            <MenuItem.Style>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <!--  Show if selected item is a folder  -->
                                        <DataTrigger Binding="{Binding Category, Converter={StaticResource ValueToStringConverter}}" Value="Folder">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <!--  Show if selected item is a file  -->
                                        <DataTrigger Binding="{Binding Category, Converter={StaticResource ValueToStringConverter}}" Value="File">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem Click="EditExecutableMenuItem_Click" Header="Edit...">
                            <MenuItem.Style>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <!--  Show if selected item is an executable  -->
                                        <DataTrigger Binding="{Binding SpecificCategory, Converter={StaticResource ValueToStringConverter}}" Value="Executable">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem Click="EditLinkMenuItem_Click" Header="Edit...">
                            <MenuItem.Style>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                    <Setter Property="OverridesDefaultStyle" Value="False" />
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <!--  Show if selected item is an executable  -->
                                        <DataTrigger Binding="{Binding Category, Converter={StaticResource ValueToStringConverter}}" Value="Link">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem Click="DeleteMenuItem_Click" Header="Delete" />
                    </ContextMenu>
                </userControls:StoreCardListBox.ItemContextMenu>
            </userControls:StoreCardListBox>
            <Border
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Padding="20"
                Visibility="{Binding NoSavedItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Foreground="{DynamicResource AppForegroundBrush}"
                    TextAlignment="Center">
                    <Run Text="You haven't added any items yet." />
                    <LineBreak />
                    <Run Text="Click the" />
                    <InlineUIContainer>
                        <fa:IconBlock
                            Margin="2,0"
                            FontSize="16"
                            Foreground="{DynamicResource AppForegroundBrush}"
                            Icon="Plus" />
                    </InlineUIContainer>
                    <Run Text="button to add an item." />
                </TextBlock>
            </Border>
        </Grid>
    </Border>
</Window>
